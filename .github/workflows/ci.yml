name: Backend CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: backend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_build:
    name: Build & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22]  # Use LTS for stability

    env:
      NODE_ENV: test
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      MONGO_URI: ${{ secrets.MONGO_URI }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
    # Install dependencies for backend
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: | 
           npm install --global yarn
           yarn --version
           yarn install
      
    # Install dependencies for frontend
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: |
          df -h
          sudo rm -rf ./build
          yarn install
          yarn run build
      
      # ---- Backend: install + tests
      #- name: Install backend deps
       # working-directory: ./backend
        #run: npm ci

      - name: Run backend tests
        working-directory: ./backend
        env:
          NODE_ENV: test
          JWT_SECRET: ${{ env.JWT_SECRET }}
          MONGO_URI: ${{ env.MONGO_URI }}
        run: npm run test

      # ---- Frontend: install + build (if present)
    #- name: Install frontend deps
     #   working-directory: ./frontend
      #  run: npm ci

      #- name: Build frontend
       # working-directory: ./frontend
        #run: npm run build

        

  deploy:
    name: Deploy (PM2 on self-hosted)
    needs: test_build
    if: github.ref == 'refs/heads/main'
    runs-on: self-hosted
    environment: production

    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      MONGO_URI: ${{ secrets.MONGO_URI }}
      PORT: ${{ secrets.PORT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install backend deps (prod)
        working-directory: ./backend
        run: npm ci --omit=dev

      - name: Write .env (backend)
        working-directory: ./backend
        run: |
          cat > .env <<'EOF'
          NODE_ENV=production
          MONGO_URI=${{ env.MONGO_URI }}
          JWT_SECRET=${{ env.JWT_SECRET }}
          PORT=${{ env.PORT }}
          EOF

      #- name: Install frontend deps
       # working-directory: ./frontend
        #run: npm ci

      #- name: Build frontend
       # working-directory: ./frontend
        #run: npm run build

      #- name: Restart app with PM2
       # working-directory: ./backend
        #run: |
         # pm2 start ecosystem.config.js || pm2 start server.js --name election-backend
          #pm2 reload all --update-env
          #pm2 save
      - name: Restart app with PM2
        run: |
          BACKEND_DIR="$GITHUB_WORKSPACE/backend"
          pm2 describe election-backend >/dev/null 2>&1 && pm2 delete election-backend || true
          pm2 start "$BACKEND_DIR/server.js" --name election-backend
          pm2 reload election-backend --update-env || pm2 restart election-backend --update-env
          pm2 save